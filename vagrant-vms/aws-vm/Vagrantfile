# -*- mode: ruby -*-
# vi: set ft=ruby :
# Require vagrant-aws plugin to continue
unless Vagrant.has_plugin?("vagrant-aws")
	raise 'vagrant-aws plugin is not installed!'
end

unless Vagrant.has_plugin?("vagrant-aws")
	raise 'vagrant-aws plugin is not installed!'
end

Vagrant.configure("2") do |config|
	# Enable .env
	config.env.enable

	# base box to use for aws
	config.vm.box = "dummy"
	config.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
	
	config.vm.allowed_synced_folder_types = [:rsync]
	
	# LINUX_NFS_OPTS = ['rw','no_subtree_check','async','all_squash','anongid=1000','anonuid=1000']
  	# config.vm.synced_folder ".", "/home/ubuntu/vagrant", type: "nfs", nfs_version: 4, nfs_udp: false, linux__nfs_options: LINUX_NFS_OPTS
  	
	# Load AWS Properties
	aws_props = YAML.load_file("aws.yml")	
	
	# AWS customizations and settings
	config.vm.provider :aws do |aws, override|
		aws.access_key_id = ENV['ACCESS_KEY_ID']
		aws.secret_access_key = ENV['SECRET_ACCESS_KEY']
		aws.region = "#{aws_props['region_id']}"
		aws.ami = "#{aws_props['ami_id']}"
		aws.instance_type = "#{aws_props['instance_type']}"
		aws.keypair_name = ENV['KEYPAIR_NAME']
		aws.security_groups = ENV['SECURITY_GROUPS']
		aws.tags = { "Name" => "#{aws_props['box']['name']}" }

		# AWS Storage:
		aws.block_device_mapping = [{
			'DeviceName' => "/dev/sda1",
			'Ebs.VolumeSize' => "#{aws_props['box']['volume_size']}", # Size in GB
			'Ebs.DeleteOnTermination' => true
		}]
		# override.nfs.functional = false
		override.ssh.username = "ubuntu"
		override.ssh.private_key_path = ENV['PRIVATE_KEY_PATH']
	end

	# provisioning: only python required
	config.vm.provision "shell", inline: <<-SHELL
		apt-get update -qqy
		apt-get install python -y > /dev/null 2>&1
	SHELL

	config.vm.provision "ansible" do |ansible|

		# add created machines to groups
		# your groups need to match the groups specified in playbook
		ansible.groups = {
			"dockerhost" => ['dockerhost1']
		}
		# auto install roles
		ansible.galaxy_role_file = "../../requirements.yml"
		ansible.galaxy_roles_path = "../../roles/"

		# run playbook!
		ansible.playbook = "../../playbook.yml"
		ansible.verbose = "vvv"
	end
	end
